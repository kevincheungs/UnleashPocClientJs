import type { FetchMock } from 'jest-fetch-mock';
/**
 * Extract request body from given `FetchMock` object.
 * @param fetchedMock - mocked fetch body to get the request body from
 * @param callIndex - index of call in given `fetcheMock`
 */
declare function getTypeSafeRequest(fetchedMock: FetchMock, callIndex?: number | undefined): RequestInit;
/**
 * Extract request url from given `FetchMock` object.
 * @param fetchedMock - mocked fetch body to get the request url from
 * @param callIndex - index of call in given `fetcheMock`
 */
declare function getTypeSafeRequestUrl(fetchedMock: FetchMock, callIndex?: number | undefined): string;
/**
 * parses given `RequestInit` with `JSON.parse()` and return
 * its body with passed type.
 */
declare function parseRequestBodyWithType<T>(requestBody: RequestInit): T;
export { getTypeSafeRequest, getTypeSafeRequestUrl, parseRequestBodyWithType };
//# sourceMappingURL=index.d.ts.map